apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: haproxy-test
    name: haproxy-test
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: haproxy-test:latest
    resources: {}
    source:
      git:
        uri: https://github.com/git001/haproxy.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: centos:latest
      type: Docker
    triggers:
    - github:
        secret: j_1Pjq4_zU8gAgE7yX_m
      type: GitHub
    - generic:
        secret: 4-H9wj7LHYrJCd6uXHSO
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: Build
  metadata:
    labels:
      app: haproxy-test
      buildconfig: haproxy-test
      openshift.io/build-config.name: haproxy-test
    name: haproxy-test-1
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: haproxy-test:latest
    resources: {}
    serviceAccount: builder
    source:
      git:
        uri: https://github.com/git001/haproxy.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: centos:latest
      type: Docker
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: haproxy-test
    name: centos
  spec:
    dockerImageRepository: library/centos
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: haproxy-test
    name: haproxy-test
  spec:
    tags:
    - from:
        kind: DockerImage
        name: haproxy-test:latest
      name: latest
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: haproxy-test
    name: haproxy-test
  spec:
    replicas: 1
    selector:
      app: haproxy-test
      deploymentconfig: haproxy-test
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: haproxy-test
          deploymentconfig: haproxy-test
      spec:
        containers:
        - command:
          - /rsyslogd-wrapper.sh
          env:
          - name: SYSLOG_PORT
            value: "8514"
          image: haproxy-test:latest
          imagePullPolicy: Always
          name: rsyslog
          ports:
          - containerPort: 8514
            protocol: UDP
          resources: {}
          terminationMessagePath: /dev/termination-log
        - command:
          - /usr/local/sbin/haproxy
          - -f
          - /usr/local/etc/haproxy/haproxy.conf
          env:
          - name: HTTP_BIND_PORT
            value: "8080"
          - name: MONITOR_BIND_PORT
            value: "9120"
          image: haproxy-test:latest
          imagePullPolicy: Always
          name: haproxy-test
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - haproxy-test
        from:
          kind: ImageStreamTag
          name: haproxy-test:latest
      type: ImageChange
  status: {}
kind: List
metadata: {}
